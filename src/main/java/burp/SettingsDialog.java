/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package burp;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.Arrays;

import javax.swing.JFileChooser;


import burp.swing.BListTableModel;

/**
 *
 * @author parallels
 */
public class SettingsDialog extends javax.swing.JDialog {
    private BListTableModel customListsModel = new BListTableModel();
    private boolean shouldSave = false;
    private String customListsDir = "";

    private void save() {
        Config.get().setCustomListsDir(customListsDir);
        shouldSave = false;
    }

    private void populateCustomLists(File dir) {
        populateCustomLists(Arrays.asList(dir.listFiles()));
    }

    private void populateCustomLists(Iterable<File> files) {
        customListsModel.clear();

        for (File file : files) {
            if (file.isDirectory()) {
                continue;
            }

            customListsModel.addRow(file.getName());
        }
    }

    /**
     * Creates new form SettingsDialog
     */
    public SettingsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        customListsModel.addColumn("TEMP");
        customListsDir = Config.get().customListsDir();
        if (customListsDir == null) {
            customListsDir = "";
        }

        customListsDirTextBox.setText(customListsDir);
        if (customListsDir != null && !customListsDir.equals("")) {
            populateCustomLists(Config.get().getCustomLists());
        }

        setLocationRelativeTo(null);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                if (shouldSave) {
                    Dialog.showYesNo("Do you want to save your changes?", () -> {
                        save();
                        shouldSave = false;
                    });
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        customListsDirTextBox = new javax.swing.JTextField();
        customListsBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        customListsTable = new javax.swing.JTable();
        saveBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(Extension.EXTENSION_NAME + " Settings");
        setName("settingsDialog"); // NOI18N
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel1.setText("Custom payload lists");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("Load custom payload lists from a directory.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 0);
        getContentPane().add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        getContentPane().add(filler1, gridBagConstraints);

        customListsDirTextBox.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        getContentPane().add(customListsDirTextBox, gridBagConstraints);

        customListsBtn.setText("Select directory ...");
        customListsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customListsBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        getContentPane().add(customListsBtn, gridBagConstraints);

        jScrollPane1.setMaximumSize(new java.awt.Dimension(500, 250));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(500, 250));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(500, 250));

        customListsTable.setModel(customListsModel);
        customListsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        customListsTable.setTableHeader(null);
        jScrollPane1.setViewportView(customListsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 5);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 5);
        getContentPane().add(saveBtn, gridBagConstraints);

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        getContentPane().add(cancelBtn, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void customListsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customListsBtnActionPerformed
        JFileChooser dirChooser = new JFileChooser();
        dirChooser.setDialogTitle("Select a directory");
        dirChooser.setCurrentDirectory(new File(customListsDir != "" ? customListsDir : System.getProperty("user.home")));
        dirChooser.setDialogType(JFileChooser.OPEN_DIALOG);
        dirChooser.setDragEnabled(false);
        dirChooser.setMultiSelectionEnabled(false);
        dirChooser.setAcceptAllFileFilterUsed(true);
        dirChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        dirChooser.setFileHidingEnabled(true);

        int result = dirChooser.showOpenDialog(getOwner());
        if (result != JFileChooser.APPROVE_OPTION) {
            return;
        }

        customListsModel.clear();

        File selectedFile = dirChooser.getSelectedFile();
        if (!customListsDir.equals(selectedFile.toString())) {
            customListsDir = selectedFile.toString();
            customListsDirTextBox.setText(customListsDir);

            shouldSave = true;
        }

        populateCustomLists(selectedFile);
    }//GEN-LAST:event_customListsBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        shouldSave = false;
        dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        save();
        dispose();
    }//GEN-LAST:event_saveBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton customListsBtn;
    private javax.swing.JTextField customListsDirTextBox;
    private javax.swing.JTable customListsTable;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables
}
